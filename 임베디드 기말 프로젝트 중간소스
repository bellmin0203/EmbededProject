#include <Servo.h>
//SoftwareSerial bluetooth(bluetoothTx, bluetoothRx);         

#define trigPin 6
#define echoPin 5

Servo servoLeft;          
Servo servoRight;


void setup()             
{ 
  pinMode(10, INPUT);  pinMode(9, OUTPUT);   // Left IR LED & Receiver
  pinMode(3, INPUT);  pinMode(2, OUTPUT);    // Right IR LED & Receiver
  pinMode(trigPin, OUTPUT); pinMode(echoPin, INPUT); //초음파 센서 
  pinMode(8, OUTPUT); pinMode(7, OUTPUT);
  tone(4, 3000, 1000);       // Play tone for 1 second
//  bluetooth.begin(9600);      //블루투스 통신 시작
  delay(1000);               // Delay to finish tone
  servoLeft.attach(13);       // Attach left signal to pin 13
  servoRight.attach(12);     // Attach right signal to pin 12
  Serial.begin(9600);
}
//초음파 센서
long microsecondsToCentimeters(long microseconds)
{
    // The speed of sound is 340 m/s or 29 microseconds per centimeter.
    // The ping travels out and back, so to find the distance of the
    // object we take half of the distance travelled.
    
    return microseconds / 29 / 2;
}

void loop()                  // Main loop auto-repeats
{
  drive();
}

void drive(){
  int irLeft = irDetect(9, 10, 40000);// Check for object on left
  int irRight = irDetect(2, 3, 40000); // Check for object on right
  digitalWrite(8, !irLeft);      // LED states opposite of IR   
  digitalWrite(7, !irRight);

  if((irLeft == 0) && (irRight == 0)) // Both sides see table surface
    maneuver(100, 100, 20);           // Forward 20 milliseconds
  else if(irLeft == 0)                // Left OK, drop-off on right
    maneuver(-100, 100, 20);          // Left for 20 ms
  else if(irRight == 0)               // Right OK, drop-off on left
    maneuver(100, -100, 20);          // Right for 20 ms
  else{                                // Drop-off straight ahead 
    maneuver(-100, -100, 200);
    backWarning();
  }
}

void backWarning(){
  long duration, cm;
  
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2); 
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10); 
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  cm = microsecondsToCentimeters(duration);
  //Serial.println(cm);
  if(cm < 3){
      tone(4, 3520, 100);
      Serial.println("3");
    }
    else if(cm < 6){
        tone(4, 1760, 100);
        Serial.println("6");
    }
    else if(cm <= 10){
        tone(4, 880, 100);
        Serial.println("10");
    }
    else if(cm < 15){
        tone(4, 440, 100);
        Serial.println("15");
    }
    else
        noTone(4);
}

//블루투스 통신
//void bluetoothFunc(){
//  char cmd;
//  if(bluetooth.available()){
//    cmd = (char)bluetooth.read();
//    
//  }
//}


//헤드라이트 동작
//void headLight(){
//  analogWrite(ledPin, analogRead(lightPin)/4);
//  delay(10);
//}

//적외선 센서 감지
int irDetect(int irLedPin, int irReceiverPin, long frequency){
  tone(irLedPin, frequency, 8);  // IRLED 38 kHz for at least 1 ms
  delay(1);                      // Wait 1 ms
  int ir = digitalRead(irReceiverPin); // IR receiver -> ir variable
  delay(1);                     // Down time before recheck
  return ir;                   // Return 1 no detect, 0 detect
}  
//바퀴 속도 조정
void maneuver(int speedLeft, int speedRight, int msTime){
  servoLeft.writeMicroseconds(1500 + speedLeft);   //왼쪽 서보속도 설정
  servoRight.writeMicroseconds(1500 - speedRight);   //오른쪽 서보속도 설정
  if(msTime==-1){                // if msTime = -1
    servoLeft.detach();          // Stop servo signals
    servoRight.detach();   
  }
  delay(msTime);                // Delay for msTime
}


//==============================박상우 =================================
//&\&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

#include <Servo.h>         // Include servo library
Servo servoLeft;          // Declare left and right servos
Servo servoRight;
int lightPin = 0; // define a pin for Photo resistor
int ledPin=11;
void setup()             // Built-in initialization block
{ pinMode( ledPin, OUTPUT );
  pinMode(10, INPUT);  pinMode(9, OUTPUT);   // Left IR LED & Receiver
  pinMode(3, INPUT);  pinMode(2, OUTPUT);    // Right IR LED & Receiver
  pinMode(8, OUTPUT); pinMode(7, OUTPUT);// Indicator LEDs
  tone(4, 3000, 1000);       // Play tone for 1 second
  delay(1000);               // Delay to finish tone
  servoLeft.attach(13);       // Attach left signal to pin 13
  servoRight.attach(12);     // Attach right signal to pin 12
}  
void loop()                  // Main loop auto-repeats
{ int irLeft = irDetect(9, 10, 40000);// Check for object on left
   int irRight = irDetect(2, 3, 40000); // Check for object on right
   digitalWrite(8, !irLeft);      // LED states opposite of IR   
   digitalWrite(7, !irRight);
 if((irLeft == 0) && (irRight == 0)) // Both sides see table surface
  { maneuver(70, 70, 20);  }   // Forward 20 milliseconds
 else if(irLeft == 0)            // Left OK, drop-off on right
  { maneuver(0, 50, 20);   }  // Left for 375 ms
  else if(irRight == 0)          // Right OK, drop-off on left
  { maneuver(50, 0, 20);   }   // Right for 375 ms
  else                            // Drop-off straight ahead
  { maneuver(0, 0, 250);   }   // Backward 250 ms before retry

  if(analogRead(lightPin)>800){
       digitalWrite(ledPin, LOW);
    }else{
       digitalWrite(ledPin, HIGH);
    }
    delay(10);
}

int irDetect(int irLedPin, int irReceiverPin, long frequency)
{tone(irLedPin, frequency, 8);  // IRLED 38 kHz for at least 1 ms
  delay(1);                      // Wait 1 ms
  int ir = digitalRead(irReceiverPin); // IR receiver -> ir variable
  delay(1);                     // Down time before recheck
  return ir;                   // Return 1 no detect, 0 detect
}  

void maneuver(int speedLeft, int speedRight, int msTime)
{ // speedLeft, speedRight ranges: Backward  Linear  Stop  Linear   
  //Forward
  //     -200      -100......0......100       200
  servoLeft.writeMicroseconds(1500 + speedLeft);   //왼쪽 서보속도 설정
  servoRight.writeMicroseconds(1500 - speedRight);   //오른쪽 서보속도 설정
  if(msTime==-1)                // if msTime = -1
  { servoLeft.detach();          // Stop servo signals
    servoRight.detach();   
  }
  delay(msTime);                // Delay for msTime
}

//=============================== 앱인벤터 활용한 블루투스 주행 =============================================================//
#include <Servo.h>
 Servo servoLeft;
 Servo servoRight;

 void setup() {
     Serial.begin(115200);
     Serial.print("$$$");
     delay(3000);
     Serial.print("SI,0800 \r");
     delay(100);
     Serial.print("SJ,800 \r");
     delay(100);
     Serial.print("SH,0000 \r");
     servoLeft.attach(13);
     servoRight.attach(12);
     maneuver(0,0,100); 
 }

 void loop() {
     if (Serial.available()) {
          char key = Serial.read();
          if (key == '8')
               maneuver(50,50,1);
          if (key == '4')
               maneuver(-50,50,1);
          if (key == '6')
               maneuver(50,-50,1);
          if (key == '2')
               maneuver(-50,-50,1);
          if (key == '0')
               maneuver(0,0,1);
     }
 }

 void maneuver(int speedLeft, int speedRight, int msTime) {
     servoLeft.writeMicroseconds(1500 + speedLeft);
     servoRight.writeMicroseconds(1500 - speedRight);
     if (msTime == -1) { 
          servoLeft.detach();
          servoRight.detach();
     }
     delay(msTime);
 }



